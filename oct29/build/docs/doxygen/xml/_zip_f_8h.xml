<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_zip_f_8h" kind="file" language="C++">
    <compoundname>ZipF.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includedby refid="_zip_f___law_8cpp" local="yes">/Users/salehabdelrahman/Desktop/oct29/homework/ZipF_Law.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/salehabdelrahman/Desktop/oct29/include/ZipF.h</label>
        <link refid="_zip_f_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="5">
        <label>set</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/salehabdelrahman/Desktop/oct29/homework/ZipF_Law.cpp</label>
        <link refid="_zip_f___law_8cpp"/>
      </node>
      <node id="1">
        <label>/Users/salehabdelrahman/Desktop/oct29/include/ZipF.h</label>
        <link refid="_zip_f_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacezip_f">zipF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ZIPF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZIPF_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacezip_f" kindref="compound">zipF</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::vector&lt;char&gt;<sp/><ref refid="namespacezip_f_1a23d76f361e5e9ff66c49db8b11798239" kindref="member">readBook</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">std::map&lt;std::string,<sp/>int&gt;<sp/><ref refid="namespacezip_f_1a3e948b8730a57a51bb29eee0d1c46231" kindref="member">computeWordFrequency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;&amp;<sp/>book);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacezip_f_1a7cceebdfbad9c5633de1054f92cbcbb5" kindref="member">countUniqueWords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;&amp;<sp/>book);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">std::multimap&lt;int,<sp/>std::string,<sp/>std::greater&lt;&gt;&gt;<sp/><ref refid="namespacezip_f_1a2b23347e83d0c110f8b0c720c4832405" kindref="member">sortFrequencies</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>int&gt;&amp;<sp/>frequencies);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacezip_f_1a19015b3670ffda24078224fbb835cb25" kindref="member">outputFrequencies</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::string,<sp/>std::greater&lt;&gt;&gt;&amp;<sp/>sortedFreq,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>outputFileName)<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacezip_f_1aeca28206be07d18f31d2825d1cbabd56" kindref="member">plotFrequencies</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::multimap&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::string,<sp/>std::greater&lt;&gt;&gt;&amp;<sp/>sortedFreq);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/Users/salehabdelrahman/Desktop/oct29/include/ZipF.h"/>
  </compounddef>
</doxygen>
