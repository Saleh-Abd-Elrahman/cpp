<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespacearabic" kind="namespace" language="C++">
    <compoundname>arabic</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacearabic_1a50889a2d84a5c057e2bf6ddae28b0336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arabic::setupLocale</definition>
        <argsstring>()</argsstring>
        <name>setupLocale</name>
        <qualifiedname>arabic::setupLocale</qualifiedname>
        <briefdescription>
<para>Sets up the locale for UTF-8 output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="5" column="6" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="5" bodyend="8" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1a210b46af1b538d82819ebb328c8ff247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool arabic::isArabicAlphabet</definition>
        <argsstring>(wchar_t ch)</argsstring>
        <name>isArabicAlphabet</name>
        <qualifiedname>arabic::isArabicAlphabet</qualifiedname>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Checks if a character is an Arabic alphabet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the character is Arabic; otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="10" column="6" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="10" bodyend="12" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1ad75d43a508128cf3eb7773d1aafe8f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; wchar_t &gt;</type>
        <definition>std::vector&lt; wchar_t &gt; arabic::readBook</definition>
        <argsstring>(const std::string &amp;fileName)</argsstring>
        <name>readBook</name>
        <qualifiedname>arabic::readBook</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Reads a book from a specified file and extracts Arabic characters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function reads the contents of the specified file and returns a vector containing only the Arabic characters found in the file. Non-Arabic characters are replaced with spaces.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to read from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of wide characters containing the Arabic characters from the file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="14" column="13" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="14" bodyend="35" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1a5b54cad27f1d77cd8d5ff625995699c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::wstring, int &gt;</type>
        <definition>std::map&lt; std::wstring, int &gt; arabic::computeWordFrequency</definition>
        <argsstring>(const std::vector&lt; wchar_t &gt; &amp;book)</argsstring>
        <name>computeWordFrequency</name>
        <qualifiedname>arabic::computeWordFrequency</qualifiedname>
        <param>
          <type>const std::vector&lt; wchar_t &gt; &amp;</type>
          <declname>book</declname>
        </param>
        <briefdescription>
<para>Computes the frequency of each word in the provided book. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>book</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of wide characters representing the contents of the book. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A map where keys are words and values are their respective frequencies. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="37" column="10" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="37" bodyend="51" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="47" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1a92e5bccfce1e161adee7e0f5e9d583d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int arabic::countUniqueWords</definition>
        <argsstring>(const std::vector&lt; wchar_t &gt; &amp;book)</argsstring>
        <name>countUniqueWords</name>
        <qualifiedname>arabic::countUniqueWords</qualifiedname>
        <param>
          <type>const std::vector&lt; wchar_t &gt; &amp;</type>
          <declname>book</declname>
        </param>
        <briefdescription>
<para>Counts the number of unique words in the provided book. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>book</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of wide characters representing the contents of the book. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of unique words in the book. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="53" column="5" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="53" bodyend="67" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="55" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1abe1d7f6588a1fcf31a68cbca5e7a6d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::multimap&lt; int, std::wstring &gt;</type>
        <definition>std::multimap&lt; int, std::wstring &gt; arabic::sortFrequencies</definition>
        <argsstring>(const std::map&lt; std::wstring, int &gt; &amp;frequencies)</argsstring>
        <name>sortFrequencies</name>
        <qualifiedname>arabic::sortFrequencies</qualifiedname>
        <param>
          <type>const std::map&lt; std::wstring, int &gt; &amp;</type>
          <declname>frequencies</declname>
        </param>
        <briefdescription>
<para>Sorts word frequencies in descending order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frequencies</parametername>
</parameternamelist>
<parameterdescription>
<para>A map where keys are words and values are their frequencies. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A multimap with frequencies as keys and words as values, sorted in descending order. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="69" column="15" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="69" bodyend="77" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="63" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1a97e992427ae79dc74f0a5c7ce8cb95f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arabic::exportFrequenciesToFile</definition>
        <argsstring>(const std::multimap&lt; int, std::wstring &gt; &amp;sortedFreq, const std::string &amp;outputFileName)</argsstring>
        <name>exportFrequenciesToFile</name>
        <qualifiedname>arabic::exportFrequenciesToFile</qualifiedname>
        <param>
          <type>const std::multimap&lt; int, std::wstring &gt; &amp;</type>
          <declname>sortedFreq</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputFileName</declname>
        </param>
        <briefdescription>
<para>Exports sorted word frequencies to a specified output file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sortedFreq</parametername>
</parameternamelist>
<parameterdescription>
<para>A multimap containing the sorted word frequencies. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file to which frequencies will be exported. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="79" column="6" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="79" bodyend="95" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacearabic_1a343959a2c47a8bcb2a27a8b268722911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void arabic::printHapaxLegomena</definition>
        <argsstring>(const std::multimap&lt; int, std::wstring &gt; &amp;sortedFreq)</argsstring>
        <name>printHapaxLegomena</name>
        <qualifiedname>arabic::printHapaxLegomena</qualifiedname>
        <param>
          <type>const std::multimap&lt; int, std::wstring &gt; &amp;</type>
          <declname>sortedFreq</declname>
        </param>
        <briefdescription>
<para>Prints hapax legomena from the sorted frequency data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function displays words that appear only once (hapax legomena) and the total count of such words.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sortedFreq</parametername>
</parameternamelist>
<parameterdescription>
<para>A multimap containing the sorted word frequencies. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="97" column="6" bodyfile="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" bodystart="97" bodyend="111" declfile="/Users/salehabdelrahman/Desktop/oct29/include/Arabic.h" declline="81" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/salehabdelrahman/Desktop/oct29/homework/Arabic.cpp" line="3" column="1"/>
  </compounddef>
</doxygen>
